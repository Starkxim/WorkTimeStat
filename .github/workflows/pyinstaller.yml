name: Pyinstaller

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version number'
        required: true

permissions:
  contents: write

jobs:
  build:

    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python 3.12
      uses: actions/setup-python@v5
      with:
        python-version: "3.12"
        cache: 'pip'
    - run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: pyinstaller
      run: |
        pip install pyinstaller 
        pyinstaller -F -w --clean main.py

    - name: Create release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ github.event.inputs.version }}  # 使用手动输入的版本号
        release_name: Release v${{ github.event.inputs.version }}  # 使用手动输入的版本号
        draft: false
        prerelease: false

    - name: Upload release asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: dist/main.exe  # 这里你可以使用生成的 exe 文件的路径
        asset_name: main.exe  # 这里你可以使用生成的 exe 文件的名称
        asset_content_type: application/octet-stream
